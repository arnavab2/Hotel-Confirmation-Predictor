correlation = cor(reservations %>% select(no_of_adults, no_of_children, no_of_weekend_nights, no_of_week_nights, required_car_parking_space, lead_time, repeated_guest, no_of_previous_cancellations, no_of_previous_bookings_not_canceled, avg_price_per_room, no_of_special_requests, previous_booking_fixed, booking_status))
library("tidyverse")
reservations = read_csv("Hotel Reservations.csv")
reservations = reservations %>% mutate(stringdate = paste(as.character(arrival_date),as.character(arrival_month), sep = ",")) %>% mutate(stringdate2 = paste(stringdate, as.character(arrival_year), sep = ",")) %>% mutate(dateobject=as.Date(stringdate2, format = "%d,%m,%Y")) %>% select(-c(stringdate, stringdate2))
reservations = reservations %>% mutate(numerated = ifelse(booking_status == "Canceled", 1, 0)) %>% mutate(previous_booking_fixed = ifelse(repeated_guest == 0, 0.5, (no_of_previous_bookings_not_canceled)/(no_of_previous_cancellations + no_of_previous_bookings_not_canceled)))
reservations = reservations %>% mutate(booking_status = ifelse(booking_status == "Canceled", 0, 1))
reservations
reservations %>% select(market_segment_type) %>% unique()
reservations %>% select(room_type_reserved) %>% unique()
reservations %>% select(type_of_meal_plan) %>% unique()
table(reservations$market_segment_type)
table(reservations$room_type_reserved)
table(reservations$type_of_meal_plan)
###Numerate market_segement_type, room_type_reserved, type_of_meal_plan
library("tidyverse")
library(corrplot)
correlation = cor(reservations %>% select(no_of_adults, no_of_children, no_of_weekend_nights, no_of_week_nights, required_car_parking_space, lead_time, repeated_guest, no_of_previous_cancellations, no_of_previous_bookings_not_canceled, avg_price_per_room, no_of_special_requests, previous_booking_fixed, booking_status))
corrplot(correlation, tl.srt = 40)
meal_relation = glm(booking_status ~ factor(type_of_meal_plan), family = binomial, data = reservations)
summary(meal_relation)
summary(meal_relation)
meal_relation = glm(booking_status ~ 0 + factor(type_of_meal_plan), family = binomial, data = reservations)
summary(meal_relation)
meal_relation = glm(booking_status ~ 0 + factor(type_of_meal_plan), family = binomial, data = reservations)
summary(meal_relation)
meal_relation = glm(booking_status ~ factor(type_of_meal_plan), family = binomial, data = reservations)
summary(meal_relation)
room_relation = glm(booking_status ~ factor(room_type_reserved), family = binomial, data = reservations)
suumary(room_relation)
summary(room_relation)
reservations= reservations %>% mutate(mealplan_numerated  = ifelse("Meal Plan 2", 0, 1))
reservations %>% mutate(roomtype_numerated = ifelse(room_type_reserved %in% c("Room_Type 6", 0, ifelse(room_type_reserved %in% c("Room_Type 4", 1, ifelse(room_type_reserved %in% c("Room_Type 1", "Room_Type 2", "Room_Type 3"), 2, ifelse(room_type_reserved %in% c("Room_Type 5"), 3, ifelse(room_type_reserved %in% c("Room_Type 7"), 7, NA))))))))
reservations %>% mutate(roomtype_numerated = ifelse(room_type_reserved %in% c("Room_Type 6", 0, ifelse(room_type_reserved %in% c("Room_Type 4", 1,                                                                    ifelse(room_type_reserved %in% c("Room_Type 1", "Room_Type 2", "Room_Type 3"), 2,                                     ifelse(room_type_reserved %in% c("Room_Type 5"), 3,
ifelse(room_type_reserved %in% c("Room_Type 7"), 7, -1))))))))
reservations %>% mutate(roomtype_numerated = ifelse(room_type_reserved %in% c("Room_Type 6", 0, ifelse(room_type_reserved %in% c("Room_Type 4", 1,                                                                    ifelse(room_type_reserved %in% c("Room_Type 1", "Room_Type 2", "Room_Type 3"), 2,-1)
reservations %>% mutate(roomtype_numerated = ifelse(room_type_reserved %in% c("Room_Type 6", 0, ifelse(room_type_reserved %in% c("Room_Type 4", 1,                                                                    ifelse(room_type_reserved %in% c("Room_Type 1", "Room_Type 2", "Room_Type 3"), 2,-1)))))
reservations %>% mutate(roomtype_numerated = ifelse(room_type_reserved %in% c("Room_Type 6", 0, ifelse(room_type_reserved %in% c("Room_Type 4", 1,                                                                    ifelse(room_type_reserved %in% c("Room_Type 1", "Room_Type 2", "Room_Type 3"), 2,-1)))))
reservations %>% mutate(roomtype_numerated = ifelse(room_type_reserved %in% c("Room_Type 6", 0, ifelse(room_type_reserved %in% c("Room_Type 4", 1,                                                                    ifelse(room_type_reserved %in% c("Room_Type 1", "Room_Type 2", "Room_Type 3"), 2,-1))))))
reservations %>% mutate(roomtype_numerated = ifelse(room_type_reserved %in% c("Room_Type 6", 0, ifelse(room_type_reserved %in% c("Room_Type 4", 1,                                                                    ifelse(room_type_reserved %in% c("Room_Type 1", "Room_Type 2", "Room_Type 3"), 2,-1))))))
reservations %>% mutate(roomtype_numerated = ifelse(room_type_reserved %in% c("Room_Type 6", 0, ifelse(room_type_reserved %in% c("Room_Type 4", 1, -1)
reservations %>% mutate(roomtype_numerated = ifelse(room_type_reserved %in% c("Room_Type 6", 0, ifelse(room_type_reserved %in% c("Room_Type 4", 1, -1))
reservations %>% mutate(roomtype_numerated = ifelse(room_type_reserved %in% c("Room_Type 6", 0, ifelse(room_type_reserved %in% c("Room_Type 4", 1, -1))
reservations %>% mutate(roomtype_numerated = ifelse(room_type_reserved %in% c("Room_Type 6", 0, ifelse(room_type_reserved %in% c("Room_Type 4", 1, -1))))
reservations %>% mutate(roomtype_numerated = ifelse(room_type_reserved %in% c("Room_Type 6", 0, ifelse(room_type_reserved %in% c("Room_Type 4", 1, -1))))
reservations %>% mutate(roomtype_numerated = ifelse(room_type_reserved %in% c("Room_Type 6", 0, ifelse(room_type_reserved %in% c("Room_Type 4", 1, -1)))))
reservations %>% mutate(roomtype_numerated = ifelse(room_type_reserved %in% c("Room_Type 6", 0, ifelse(room_type_reserved %in% c("Room_Type 4", 1, -1)))))
reservations %>% mutate(roomtype_numerated = ifelse(room_type_reserved %in% c("Room_Type 6", 0,-1)
reservations %>% mutate(roomtype_numerated = ifelse(room_type_reserved %in% c("Room_Type 6", 0,-1)))
reservations %>% mutate(roomtype_numerated = ifelse(room_type_reserved %in% c("Room_Type 6", 0,-1)))
reservations %>% mutate(roomtype_numerated = ifelse(room_type_reserved %in% c("Room_Type 6"), 0,
ifelse(room_type_reserved %in% c("Room_Type 4"), 1,                                                                    ifelse(room_type_reserved %in% c("Room_Type 1", "Room_Type 2", "Room_Type 3"), 2,                                     ifelse(room_type_reserved %in% c("Room_Type 5"), 3,                                                                    ifelse(room_type_reserved %in% c("Room_Type 7"), 7, NA))))))
reservations= reservations %>% mutate(mealplan_numerated  = ifelse("Meal Plan 2", 0, 1))
reservations %>% mutate(roomtype_numerated = ifelse(room_type_reserved %in% c("Room_Type 6"), 0,
ifelse(room_type_reserved %in% c("Room_Type 4"), 1,                                                                    ifelse(room_type_reserved %in% c("Room_Type 1", "Room_Type 2", "Room_Type 3"), 2,                                     ifelse(room_type_reserved %in% c("Room_Type 5"), 3,                                                                    ifelse(room_type_reserved %in% c("Room_Type 7"), 7, NA))))))
room_relation.score = glm(booking_status ~ roomtype_numerated, family = binomial, data = reservations)
reservations = reservations %>% mutate(roomtype_numerated = ifelse(room_type_reserved %in% c("Room_Type 6"), 0,
ifelse(room_type_reserved %in% c("Room_Type 4"), 1,                                                                    ifelse(room_type_reserved %in% c("Room_Type 1", "Room_Type 2", "Room_Type 3"), 2,                                     ifelse(room_type_reserved %in% c("Room_Type 5"), 3,                                                                    ifelse(room_type_reserved %in% c("Room_Type 7"), 7, NA))))))
room_relation.score = glm(booking_status ~ roomtype_numerated, family = binomial, data = reservations)
summary(room_relation.score)
1 - pchisq(36273, 45841)
1 - pchisq(36274, 45887)
room_relation = glm(booking_status ~ factor(room_type_reserved), family = binomial, data = reservations)
room_relation = glm(booking_status ~ factor(room_type_reserved), family = binomial, data = reservations)
summary(room_relation)
corr(reservations$booking_status, reservations$room_type_reserved)
library("tidyverse")
reservations = read_csv("Hotel Reservations.csv")
reservations = reservations %>% mutate(stringdate = paste(as.character(arrival_date),as.character(arrival_month), sep = ",")) %>% mutate(stringdate2 = paste(stringdate, as.character(arrival_year), sep = ",")) %>% mutate(dateobject=as.Date(stringdate2, format = "%d,%m,%Y")) %>% select(-c(stringdate, stringdate2))
reservations = reservations %>% mutate(numerated = ifelse(booking_status == "Canceled", 1, 0)) %>% mutate(previous_booking_fixed = ifelse(repeated_guest == 0, 0.5, (no_of_previous_bookings_not_canceled)/(no_of_previous_cancellations + no_of_previous_bookings_not_canceled)))
reservations = reservations %>% mutate(booking_status = ifelse(booking_status == "Canceled", 0, 1))
reservations
reservations %>% select(market_segment_type) %>% unique()
reservations %>% select(room_type_reserved) %>% unique()
reservations %>% select(type_of_meal_plan) %>% unique()
table(reservations$market_segment_type)
table(reservations$room_type_reserved)
table(reservations$type_of_meal_plan)
###Numerate market_segement_type, room_type_reserved, type_of_meal_plan
library("tidyverse")
library(corrplot)
correlation = cor(reservations %>% select(no_of_adults, no_of_children, no_of_weekend_nights, no_of_week_nights, required_car_parking_space, lead_time, repeated_guest, no_of_previous_cancellations, no_of_previous_bookings_not_canceled, avg_price_per_room, no_of_special_requests, previous_booking_fixed, booking_status))
corrplot(correlation, tl.srt = 40)
meal_relation = glm(booking_status ~ factor(type_of_meal_plan), family = binomial, data = reservations)
summary(meal_relation)
reservations= reservations %>% mutate(mealplan_numerated  = ifelse("Meal Plan 2", 0, 1))
room_relation = glm(booking_status ~ factor(room_type_reserved), family = binomial, data = reservations)
summary(room_relation)
corr(reservations$booking_status, reservations$room_type_reserved)
cor(reservations$booking_status, reservations$room_type_reserved)
cor(reservations$booking_status, reservations$roomtype_numerated)
cor(reservations %>% select(booking_status, roomtype_numerated))
reservations = reservations %>% mutate(roomtype_numerated = ifelse(room_type_reserved %in% c("Room_Type 6"), 0,
ifelse(room_type_reserved %in% c("Room_Type 4"), 1,                                                                    ifelse(room_type_reserved %in% c("Room_Type 1", "Room_Type 2", "Room_Type 3"), 2,                                     ifelse(room_type_reserved %in% c("Room_Type 5"), 3,                                                                    ifelse(room_type_reserved %in% c("Room_Type 7"), 7, NA))))))
room_relation.score = glm(booking_status ~ roomtype_numerated, family = binomial, data = reservations)
summary(room_relation.score)
cor(reservations %>% select(booking_status, roomtype_numerated))
meal_relation = glm(booking_status ~ mealplan_numerated, family = binomial, data = reservations)
meal_relation = glm(booking_status ~ mealplan_numerated, family = binomial, data = reservations)
summary(meal_relation)
reservations= reservations %>% mutate(mealplan_numerated  = ifelse("Meal Plan 2", 0, 1))
meal_relation = glm(booking_status ~ mealplan_numerated, family = binomial, data = reservations)
meal_relation = glm(booking_status ~ mealplan_numerated, family = binomial, data = reservations)
summary(meal_relation)
meal_relation = glm(booking_status ~ mealplan_numerated, family = binomial, data = reservations)
reservations= reservations %>% mutate(mealplan_numerated  = ifelse("Meal Plan 2", 0, 1))
reservations
reservations= reservations %>% mutate(mealplan_numerated  = ifelse("Meal Plan 2", 0, 1))
library("tidyverse")
reservations = read_csv("Hotel Reservations.csv")
reservations = reservations %>% mutate(stringdate = paste(as.character(arrival_date),as.character(arrival_month), sep = ",")) %>% mutate(stringdate2 = paste(stringdate, as.character(arrival_year), sep = ",")) %>% mutate(dateobject=as.Date(stringdate2, format = "%d,%m,%Y")) %>% select(-c(stringdate, stringdate2))
reservations = reservations %>% mutate(numerated = ifelse(booking_status == "Canceled", 1, 0)) %>% mutate(previous_booking_fixed = ifelse(repeated_guest == 0, 0.5, (no_of_previous_bookings_not_canceled)/(no_of_previous_cancellations + no_of_previous_bookings_not_canceled)))
reservations = reservations %>% mutate(booking_status = ifelse(booking_status == "Canceled", 0, 1))
reservations
reservations %>% select(market_segment_type) %>% unique()
reservations %>% select(room_type_reserved) %>% unique()
reservations %>% select(type_of_meal_plan) %>% unique()
table(reservations$market_segment_type)
table(reservations$room_type_reserved)
table(reservations$type_of_meal_plan)
###Numerate market_segement_type, room_type_reserved, type_of_meal_plan
library("tidyverse")
library(corrplot)
correlation = cor(reservations %>% select(no_of_adults, no_of_children, no_of_weekend_nights, no_of_week_nights, required_car_parking_space, lead_time, repeated_guest, no_of_previous_cancellations, no_of_previous_bookings_not_canceled, avg_price_per_room, no_of_special_requests, previous_booking_fixed, booking_status))
corrplot(correlation, tl.srt = 40)
meal_relation = glm(booking_status ~ factor(type_of_meal_plan), family = binomial, data = reservations)
summary(meal_relation)
#reservations= reservations %>% mutate(mealplan_numerated  = ifelse("Meal Plan 2", 0, 1))
meal_relation = glm(booking_status ~ mealplan_numerated, family = binomial, data = reservations)
reservations= reservations %>% mutate(mealplan_numerated  = ifelse(type_of_meal_plan == "Meal Plan 2", 0, 1))
reservations
meal_relation = glm(booking_status ~ mealplan_numerated, family = binomial, data = reservations)
summary(meal_relation)
transportation_type = glm(booking_status ~market_segment_type, family = binomial, data= reservations)
summary(transportation_type)
summary(transportation_type)
reservations %>% mutate(transportation_numerated = ifelse(market_segement_type == "Corporate", 1, 0))
reservations %>% mutate(transportation_numerated = ifelse(market_segment_type == "Corporate", 1, 0))
reservations = reservations %>% mutate(transportation_numerated = ifelse(market_segment_type == "Corporate", 1, 0))
transportation_model = glm(booking_status ~ transportation_numerated, family = binomial, data = reservations)
transportation_model = glm(booking_status ~ transportation_numerated, family = binomial, data = reservations)
summary(transportation_model)
reservations = reservations %>% mutate(transportation_numerated = ifelse(market_segment_type == "Corporate", 0, 1))
transportation_model = glm(booking_status ~ transportation_numerated, family = binomial, data = reservations)
summary(transportation_model)
transportation_model = glm(booking_status ~ transportation_numerated, family = binomial, data = reservations)
summary(transportation_model)
library("tidyverse")
reservations = read_csv("Hotel Reservations.csv")
reservations = reservations %>% mutate(stringdate = paste(as.character(arrival_date),as.character(arrival_month), sep = ",")) %>% mutate(stringdate2 = paste(stringdate, as.character(arrival_year), sep = ",")) %>% mutate(dateobject=as.Date(stringdate2, format = "%d,%m,%Y")) %>% select(-c(stringdate, stringdate2))
reservations = reservations %>% mutate(numerated = ifelse(booking_status == "Canceled", 1, 0)) %>% mutate(previous_booking_fixed = ifelse(repeated_guest == 0, 0.5, (no_of_previous_bookings_not_canceled)/(no_of_previous_cancellations + no_of_previous_bookings_not_canceled)))
reservations = reservations %>% mutate(booking_status = ifelse(booking_status == "Canceled", 0, 1))
reservations
reservations %>% select(market_segment_type) %>% unique()
reservations %>% select(room_type_reserved) %>% unique()
reservations %>% select(type_of_meal_plan) %>% unique()
table(reservations$market_segment_type)
table(reservations$room_type_reserved)
table(reservations$type_of_meal_plan)
###Numerate market_segement_type, room_type_reserved, type_of_meal_plan
library("tidyverse")
library(corrplot)
correlation = cor(reservations %>% select(no_of_adults, no_of_children, no_of_weekend_nights, no_of_week_nights, required_car_parking_space, lead_time, repeated_guest, no_of_previous_cancellations, no_of_previous_bookings_not_canceled, avg_price_per_room, no_of_special_requests, previous_booking_fixed, booking_status))
corrplot(correlation, tl.srt = 40)
meal_relation = glm(booking_status ~ factor(type_of_meal_plan), family = binomial, data = reservations)
summary(meal_relation)
reservations= reservations %>% mutate(mealplan_numerated  = ifelse(type_of_meal_plan == "Meal Plan 2", 0, 1))
reservations
meal_relation = glm(booking_status ~ mealplan_numerated, family = binomial, data = reservations)
summary(meal_relation)
room_relation = glm(booking_status ~ factor(room_type_reserved), family = binomial, data = reservations)
summary(room_relation)
reservations = reservations %>% mutate(roomtype_numerated = ifelse(room_type_reserved %in% c("Room_Type 6"), 0,
ifelse(room_type_reserved %in% c("Room_Type 4"), 1,                                                                    ifelse(room_type_reserved %in% c("Room_Type 1", "Room_Type 2", "Room_Type 3"), 2,                                     ifelse(room_type_reserved %in% c("Room_Type 5"), 3,                                                                    ifelse(room_type_reserved %in% c("Room_Type 7"), 7, NA))))))
room_relation.score = glm(booking_status ~ roomtype_numerated, family = binomial, data = reservations)
summary(room_relation.score)
cor(reservations %>% select(booking_status, roomtype_numerated))
transportation_type = glm(booking_status ~market_segment_type, family = binomial, data= reservations)
summary(transportation_type)
reservations = reservations %>% mutate(transportation_numerated = ifelse(market_segment_type == "Corporate", 0, 1))
transportation_model = glm(booking_status ~ transportation_numerated, family = binomial, data = reservations)
summary(transportation_model)
1 - pchisq(45334, 36273)
reservations
col_names(reservations)
colnames(reservations)
cor(reservations %>% select(booking_status, roomtype_numerated, no_of_children, no_of_adults, no_of_weekend_nights, no_of_week_nights, lead_time, repeated_guest, no_of_previous_cancellations, no_of_previous_bookings_not_canceled, avg_price_per_room, no_of_special_requests, numerated, previous_booking_fixed, mealplan_numerated, roomtype_numerated, transportation_numerated))
corrplot(cor(reservations %>% select(booking_status, roomtype_numerated, no_of_children, no_of_adults, no_of_weekend_nights, no_of_week_nights, lead_time, repeated_guest, no_of_previous_cancellations, no_of_previous_bookings_not_canceled, avg_price_per_room, no_of_special_requests, numerated, previous_booking_fixed, mealplan_numerated, roomtype_numerated, transportation_numerated)), tl.srt = 40)
colnames(reservations)
corrplot(cor(reservations %>% select(booking_status, roomtype_numerated, no_of_children, no_of_adults, no_of_weekend_nights, no_of_week_nights, lead_time, repeated_guest, no_of_previous_cancellations, no_of_previous_bookings_not_canceled, avg_price_per_room, no_of_special_requests, numerated, previous_booking_fixed, mealplan_numerated, roomtype_numerated, transportation_numerated)), tl.srt = 40)
reservations
corrplot(cor(reservations %>% select(booking_status, roomtype_numerated, no_of_children, no_of_adults, no_of_weekend_nights, no_of_week_nights, lead_time, repeated_guest, no_of_previous_cancellations, no_of_previous_bookings_not_canceled, avg_price_per_room, no_of_special_requests, numerated, previous_booking_fixed, mealplan_numerated, roomtype_numerated, transportation_numerated)), tl.srt = 40)
reservations %>% select(room_type_reserved, booking_status) %>% group_by(room_type_reserved)
reservations %>% select(room_type_reserved, booking_status) %>% group_by(room_type_reserved) %>% summarize(mean(booking_status))
colnames(reservations)
reservations %>% select(type_of_meal_plan, booking_status)%>% group_by(type_of_meal_plan) %>% summarize(mean(booking_status))
reservations %>% select(arrival_month, booking_status) %>% group_by(arrival_month) %>% summarize(mean(booking_status))
corr(reservations %>% select(arrival_months, avg_price_per_room)
corr(reservations %>% select(arrival_months, avg_price_per_room))
corr(reservations %>% select(arrival_months, avg_price_per_room))
cor(reservations %>% select(arrival_months, avg_price_per_room))
cor(reservations %>% select(arrival_month, avg_price_per_room))
boxplot(reservations$booking_status, reservations$lead_time)
seasons_vs_cancellations = reservations %>% select(canceled, month) %>% group_by(month)  %>% summarize(average_cancellations =sum(canceled)/n())
reservations = reservations %>% mutate(stringdate = paste(as.character(arrival_date),as.character(arrival_month), sep = ",")) %>% mutate(stringdate2 = paste(stringdate, as.character(arrival_year), sep = ",")) %>% mutate(dateobject=as.Date(stringdate2, format = "%d,%m,%Y")) %>% select(-c(stringdate, stringdate2))
reservations
